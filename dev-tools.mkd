📦 **git**

Note: If you installed oh-my-zsh before, it should be installed by it.

🐧 Linux User
:link: *https://www.atlassian.com/git/tutorials/install-git*

```console
sudo apt-get install git
```

🍎 MAC User

```console
brew install git
```

:heavy_check_mark: Check if it's correctly installed

```console
git --help
```

*Edit .gitconfig*

```console
git config --global user.email "you@example.com"
```

```console
git config --global user.name "Your Name"
```

:triangular_flag_on_post: Optional: For automatically pull with rebase :

```console
git config --global --bool pull.rebase true
```

📦 **node**

You can install node in many ways, just using the command bellow, or move into nvm section (I recommended) ! 

🐧 Linux User
```console
sudo apt install nodejs
```

🍎 MAC User
```console
brew install node
```

📦 **nvm**

https://nodejs.org/en/download/package-manager#nvm

```console
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
```

Add global command

```console
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
```

You can choose the correct node version to install

```console
nvm install 16.13.2

nvm alias default 16.13.2 // if you want to set a version by default
```

Don't remember why I add the section bellow

```console
## In the same command

export NVM_DIR="$HOME/.nvm"

[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
```

📦 **npm**

🐧 Linux User
```console
sudo apt install npm
```

:x: *If disk error => https://askubuntu.com/questions/386265/media-change-please-insert-the-disc-labeled-when-trying-to-install-ruby-on-ra*

🍎 MAC User

node install npm automatically (even with nvm installation)

📦 **docker** :whale: 

🐧 Linux User
[Docker](https://docs.docker.com/engine/install/ubuntu/#installation-methods)

🍎 MAC User

https://docs.docker.com/docker-for-mac/install/

📦 **docker-compose** :whale:

🐧 Linux User
Included in the docker installation above

🍎 MAC User
Included in docker desktop

📦 **kubernetes**

🐧 Linux User
[Kubernetes](./docker/kubernetes-setup.mkd)

🍎 MAC User
Not available yet on M1

📦 **mongodb**

🐧 Linux User
```console
sudo apt-get install gnupg
```

```console
wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
```

https://www.digitalocean.com/community/tutorials/how-to-install-mongodb-on-ubuntu-18-04


```console
sudo apt install -y mongodb
```

:running: We will need to run mongo , to run it you can execute this

```console
sudo systemctl start mongodb
```

But if you want to start it every time you restart your computer

```console
sudo systemctl enable mongodb
```

And disabled with

```console
sudo systemctl disable mongodb
```

🍎 MAC User

*source:* https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/

```console
brew tap mongodb/brew

brew install mongodb-community@4.4
```

*Start it:*

```console
brew services start mongodb-community
```

:x: Test if it's working

```console
mongo --eval 'db.runCommand({ connectionStatus: 1 })'
```

**npm important package**

📦 **typescript**

```console
npm install -g typescript
```

```console
npm install --global yarn
```
